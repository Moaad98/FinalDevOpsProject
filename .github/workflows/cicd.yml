name: Build and Deploy to EKS

on:
  push:
    branches: [main]

jobs:
  CICD:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v4
      with:
        aws-access-key-id: ${{ secrets.ACCESS_KEY }}
        aws-secret-access-key: ${{ secrets.SECRET_ACCESS_KEY }}
        aws-region: us-east-1

    - name: Login to Amazon ECR
      uses: aws-actions/amazon-ecr-login@v2

    - name: Build, tag, and push Docker image
      run: |
        echo "Building Docker image..."
        docker build -t moaad-namegen .
        echo "Tagging Docker image..."
        docker tag moaad-namegen:latest public.ecr.aws/k5u0o7b3/moaad-namegen:latest
        echo "Pushing Docker image to ECR..."
        docker push public.ecr.aws/k5u0o7b3/moaad-namegen:latest
        echo "Docker image pushed successfully."

    - name: Deploy MongoDB StatefulSet and related resources
      run: |
        echo "Updating kubeconfig to access EKS cluster..."
        aws eks --region us-east-1 update-kubeconfig --name rng-cluster

        echo "Applying MongoDB StorageClass..."
        kubectl apply -f k8s_manifests/db_sc.yaml

        echo "Applying MongoDB Service..."
        kubectl apply -f k8s_manifests/db_svc.yaml

        echo "Applying MongoDB StatefulSet deployment..."
        kubectl apply -f k8s_manifests/db_deployment.yaml

        echo "Waiting for MongoDB StatefulSet rollout to complete..."
        kubectl rollout status statefulset/mongo

        echo "MongoDB deployed successfully."

    - name: Deploy application to EKS
      run: |
        echo "Deploying application Service..."
        kubectl apply -f k8s_manifests/app_svc.yaml

        echo "Deploying application Deployment..."
        kubectl apply -f k8s_manifests/app_deployment.yaml

        echo "Waiting for application Deployment rollout to complete..."
        kubectl rollout status deployment/namegen-app

        echo "Application deployed successfully."

        echo "Getting application Service details..."
        kubectl get svc namegen-svc -o wide
